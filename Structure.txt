//======================================================================
//  Final Project Structure for Empower Supply Chain Network
//======================================================================

/  // The main project folder (e.g., "Web Building")
|
|-- .env                     // Environment variables (Firebase keys, etc.). Kept private.
|-- .gitignore               // Tells Git which files and folders to ignore (like node_modules).
|-- index.html               // The single HTML page the browser loads. React injects the app here.
|-- package.json             // Lists all project dependencies and command scripts (like "dev", "build").
|-- postcss.config.js        // Configuration for PostCSS (works with Tailwind).
|-- tailwind.config.js       // Configuration for Tailwind CSS (your custom colors and theme).
|-- tsconfig.json            // Main configuration for TypeScript.
|-- tsconfig.node.json       // Helper configuration for TypeScript in a Node.js environment.
|-- vite.config.ts           // Configuration for the Vite build tool.
|
|-- dist/                    // (This folder is auto-generated by `npm run build`). The final, optimized website files that get deployed. Ignored by Git.
|-- node_modules/            // (This folder is auto-generated by `npm install`). Contains all the downloaded library code. Ignored by Git.
|
|-- public/                  // A folder for static assets that don't need processing. Can be used for favicons, etc.
|
`-- src/                     // The "source" folder. This is where ALL of our application code lives.
    |
    |-- App.tsx              // The main component. It defines the layout (Header/Footer) and the router.
    |-- main.tsx             // The absolute starting point of the app. It renders App.tsx into the HTML.
    |-- vite-env.d.ts        // Type definitions for Vite, helps TypeScript understand `import.meta.env`.
    |
    |-- assets/              // For static assets that are imported into the code (images, fonts, global CSS).
    |   |-- images/
    |   |   |-- ESCN_Logo.png
    |   |   |-- Homepage_Photo_3.png
    |   |   |-- Michelle.jpg
    |   |   `-- Shuya.png
    |   `-- index.css        // Global CSS file where Tailwind is initialized.
    |
    |-- components/          // Reusable "LEGO bricks" used to build pages.
    |   |-- layout/          // Components that define the main page structure.
    |   |   |-- Footer.tsx
    |   |   `-- Header.tsx
    |   |-- modals/          // Components for pop-up modals.
    |   |   |-- BaseModal.tsx
    |   |   |-- LoginModal.tsx
    |   |   `-- MembershipModal.tsx
    |   |-- shared/          // Common components used across multiple pages.
    |   |   |-- Loader.tsx
    |   |   `-- SectionTitle.tsx
    |   `-- ui/              // Very basic, unstyled UI building blocks.
    |       |-- Button.tsx
    |       |-- Card.tsx
    |       `-- Tabs.tsx
    |
    |-- config/              // Configuration files for services.
    |   `-- firebase.ts      // (Placeholder) Configuration to connect to Firebase.
    |
    |-- data/                // Mock data to simulate a database.
    |   `-- mockData.ts      // Contains the data for founders, jobs, programs, etc.
    |
    |-- hooks/               // Custom, reusable React Hooks (logic).
    |   |-- useAuth.ts
    |   `-- useTypedSelector.ts
    |
    |-- pages/               // Each file/folder here represents a full page of the website.
    |   |-- AboutPage/       // A folder for the more complex About Us page.
    |   |   |-- DnaSection.tsx
    |   |   |-- FoundersSection.tsx
    |   |   |-- WhoWeAreSection.tsx
    |   |   `-- index.tsx    // The main component that assembles the About Us page.
    |   |-- EventsPage.tsx
    |   |-- HomePage.tsx
    |   |-- JobsPage.tsx
    |   |-- ProgramsPage.tsx
    |   `-- SuccessStoriesPage.tsx
    |
    |-- services/            // Isolates communication with external services (like a database).
    |   |-- authService.ts
    |   `-- dataService.ts
    |
    |-- store/               // Code for the Redux "central brain" (state management).
    |   |-- slices/          // Different "departments" of the brain.
    |   |   |-- authSlice.ts
    |   |   |-- dataSlice.ts
    |   |   `-- uiSlice.ts
    |   `-- store.ts         // Assembles all the slices into the main Redux store.
    |
    |-- types/               // TypeScript type definitions and interfaces.
    |   `-- index.ts         // Defines the "shape" of our data (Founder, Job, etc.).
    |
    `-- utils/               // Utility functions that can be used anywhere.
        `-- cn.ts            // A helper function to combine CSS class names.